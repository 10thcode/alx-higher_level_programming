>>> matrix_mul = __import__("100-matrix_mul").matrix_mul

>>> print(matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]]))
[[7, 10], [15, 22]]

>>> print(matrix_mul([[1, 2]], [[3, 4], [5, 6]]))
[[13, 16]]

>>> print(matrix_mul([[1]], [[3, 4], [5, 6]]))
Traceback (most recent call last):
ValueError: m_a and m_b can't be multiplied

>>> print(matrix_mul(22, [[3, 4], [5, 6]]))
Traceback (most recent call last):
TypeError: m_a must be a list

>>> print(matrix_mul([[3, 4], [5, 6]], 22))
Traceback (most recent call last):
TypeError: m_b must be a list

>>> print(matrix_mul([[23, 34], "Hello"], [[23, 43], [43, 53]]))
Traceback (most recent call last):
TypeError: m_a must be a list of lists

>>> print(matrix_mul([[23, 43], [43, 53]], [45, "Hello"]))
Traceback (most recent call last):
TypeError: m_b must be a list of lists

>>> print(matrix_mul([], [45, "Hello"]))
Traceback (most recent call last):
ValueError: m_a can't be empty

>>> print(matrix_mul([[2, 3, 4], [2, 3, 4]], [[]]))
Traceback (most recent call last):
ValueError: m_b can't be empty

>>> print(matrix_mul([["Hello", 3, 4], [2, 3, 4]], [[3, 4, 5], [3, 4, 5], [3, 4, 5]]))
Traceback (most recent call last):
TypeError: m_a should contain only integers or floats

>>> print(matrix_mul([[3, 3, 4], [2, 3]], [[[3,4], 4, 5], [3, 4, 5], [3, 4, 5]]))
Traceback (most recent call last):
TypeError: m_b should contain only integers or floats

>>> print(matrix_mul())
Traceback (most recent call last):
ValueError: m_a can't be empty

>>> print(matrix_mul([[1, 2, 3, 4], [1, 2, 3, 4]]))
Traceback (most recent call last):
ValueError: m_b can't be empty
