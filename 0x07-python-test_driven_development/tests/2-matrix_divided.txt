=================
TASK 1 TEST CASES
=================

>>> matrix_divided = __import__("2-matrix_divided").matrix_divided

Test Case 1
	>>> print(matrix_divided("str", 3))
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

Test Case 2
	>>> print(matrix_divided(["Hello", [2, 4]], 3))
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

Test Case 3
	>>> print(matrix_divided([[2, 4, 5], [2, 4]], 3))
	Traceback (most recent call last):
	TypeError: Each row of the matrix must have the same size

Test Case 4
	>>> print(matrix_divided([[2, 4, 5], [2, 4]], 3))
	Traceback (most recent call last):
	TypeError: Each row of the matrix must have the same size

Test Case 5
	>>> print(matrix_divided([[2, 4], [2, 4]], 2))
	[[1.0, 2.0], [1.0, 2.0]]

Test Case 6
	>>> print(matrix_divided([[2, 4], [2, 4]], "String"))
	Traceback (most recent call last):
	TypeError: div must be a number

Test Case 7
	>>> print(matrix_divided([[2, 4], [2, 4]], 0))
	Traceback (most recent call last):
	ZeroDivisionError: division by zero

Test Case 8
	>>> print(matrix_divided([[2, 4], [2, 4]], float("inf")))
	Traceback (most recent call last):
	TypeError: div must be a number

Test Case 9
	>>> print(matrix_divided([[2, 4], [2, 4]]))
	[[2.0, 4.0], [2.0, 4.0]]

Test Case 10
	>>> print(matrix_divided())
	[[]]
